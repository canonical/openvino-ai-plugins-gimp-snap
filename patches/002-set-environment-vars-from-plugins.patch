diff --git a/gimpopenvino/install_utils.py b/gimpopenvino/install_utils.py
index 2c79020..7f0bdf2 100644
--- a/gimpopenvino/install_utils.py
+++ b/gimpopenvino/install_utils.py
@@ -119,29 +119,45 @@ def get_plugin_version(file_dir=None):
 
     we can then turn this into a PEP440 compliant string
     """
-    try:
-        raw_version = subprocess.check_output(
-            ["git", "describe", "--tags"],
-            cwd=file_dir,
-            encoding="utf-8"
-        ).strip()
-        
-        # Normalize the git version to PEP 440
-        match = re.match(r"v?(\d+\.\d+\.\d+)(?:-(\d+)-g[0-9a-f]+)?", raw_version)
-
-        if match:
-            version, dev_count = match.groups()
-            if dev_count:
-                return f"{version}.dev{dev_count}"  # PEP 440 dev version
-            return version
-        else:
-            raise ValueError(f"Invalid version format: {raw_version}")
-    except Exception as e:
-        print(f"Error obtaining version: {e}")
-        return "0.0.0"  # Fallback version    
+    #try:
+    #    raw_version = subprocess.check_output(
+    #        ["git", "describe", "--tags"],
+    #        cwd=file_dir,
+    #        encoding="utf-8"
+    #    ).strip()
+    #    
+    #    # Normalize the git version to PEP 440
+    #    match = re.match(r"v?(\d+\.\d+\.\d+)(?:-(\d+)-g[0-9a-f]+)?", raw_version)
+
+    #    if match:
+    #        version, dev_count = match.groups()
+    #        if dev_count:
+    #            return f"{version}.dev{dev_count}"  # PEP 440 dev version
+    #        return version
+    #    else:
+    #        raise ValueError(f"Invalid version format: {raw_version}")
+    #except Exception as e:
+    #    print(f"Error obtaining version: {e}")
+    return "0.0.0"  # Fallback version
 
 
 def complete_install(repo_weights_dir=None):
+    snap_env_var = os.environ.get("SNAP")
+    ov_content_dir = f"{snap_env_var}/gimp-plugins/openvino-gimp"
+    pythonpath_env_var = os.environ.get("PYTHONPATH")
+    path_env_var = os.environ.get("PATH")
+    os.environ.setdefault("OCL_ICD_VENDORS", f"{ov_content_dir}/etc/OpenCL/vendors")
+    os.environ["PYTHONPATH"] = (
+        f"{pythonpath_env_var}:"
+        f"{ov_content_dir}/lib/python3.12/site-packages:"
+        f"{ov_content_dir}/usr/lib/python3/dist-packages"
+    )
+    os.environ["PATH"] = (
+        f"{path_env_var}:"
+        f"{ov_content_dir}/usr/bin:"
+        f"{ov_content_dir}/bin"
+    )
+
     install_location = base_model_dir 
 
     # Create the install directory if it doesn't exist
@@ -186,12 +202,12 @@ def complete_install(repo_weights_dir=None):
         json.dump(py_dict, file)
 
     # For Linux, add executable permissions to plugin scripts
-    if platform.system() == "Linux":
-        scripts = [
-            "plugins/superresolution_ov/superresolution_ov.py",
-            "plugins/stable_diffusion_ov/stable_diffusion_ov.py",
-            "plugins/semseg_ov/semseg_ov.py",
-        ]
-        for script in scripts:
-            script_path = os.path.join(plugin_loc, script)
-            subprocess.call(["chmod", "+x", script_path])
+    #if platform.system() == "Linux":
+    #    scripts = [
+    #        "plugins/superresolution_ov/superresolution_ov.py",
+    #        "plugins/stable_diffusion_ov/stable_diffusion_ov.py",
+    #        "plugins/semseg_ov/semseg_ov.py",
+    #    ]
+    #    for script in scripts:
+    #        script_path = os.path.join(plugin_loc, script)
+    #        subprocess.call(["chmod", "+x", script_path])
diff --git a/gimpopenvino/plugins/openvino_utils/tools/tools_utils.py b/gimpopenvino/plugins/openvino_utils/tools/tools_utils.py
index eff6e56..a97eee8 100644
--- a/gimpopenvino/plugins/openvino_utils/tools/tools_utils.py
+++ b/gimpopenvino/plugins/openvino_utils/tools/tools_utils.py
@@ -4,6 +4,9 @@
 import os
 import json
 
+snap_user_common_env_var = os.environ.get("SNAP_USER_COMMON")
+os.environ["GIMP_OPENVINO_CONFIG_PATH"] = snap_user_common_env_var
+os.environ["GIMP_OPENVINO_MODELS_PATH"] = snap_user_common_env_var
 base_model_dir = (
     os.path.join(os.environ.get("GIMP_OPENVINO_MODELS_PATH"))
     if os.environ.get("GIMP_OPENVINO_MODELS_PATH") is not None
diff --git a/gimpopenvino/plugins/semseg_ov/semseg_ov.py b/gimpopenvino/plugins/semseg_ov/semseg_ov.py
index 90d7365..9700ed3 100644
--- a/gimpopenvino/plugins/semseg_ov/semseg_ov.py
+++ b/gimpopenvino/plugins/semseg_ov/semseg_ov.py
@@ -20,6 +20,33 @@ import sys
 sys.path.extend([os.path.join(os.path.dirname(os.path.realpath(__file__)), "..","openvino_utils")])
 from plugin_utils import *
 from tools.tools_utils import base_model_dir, config_path_dir
+sys.path.extend([
+    os.path.join(
+        os.path.dirname(os.path.realpath(__file__)),
+        "..",
+        "openvino-gimp",
+        "lib",
+        "python3.12",
+        "site-packages"
+    ),
+    os.path.join(
+        os.path.dirname(os.path.realpath(__file__)),
+        "..",
+        "openvino-gimp",
+        "usr",
+        "lib",
+        "python3",
+        "dist-packages"
+    )
+])
+ld_library_path_env_var = os.environ.get("LD_LIBRARY_PATH")
+snap_env_var = os.environ.get("SNAP")
+ov_content_dir = f"{snap_env_var}/gimp-plugins/openvino-gimp"
+os.environ["LD_LIBRARY_PATH"] = (
+    f"{ov_content_dir}/usr/lib/x86_64-linux-gnu:"
+    f"{ld_library_path_env_var}"
+)
+from gimpopenvino import install_utils
 
 _ = gettext.gettext
 image_paths = {
@@ -141,6 +168,8 @@ def semseg(procedure, image, drawable, device_name, model_name, progress_bar, co
 
 
 def run(procedure, run_mode, image, layer, config, data):
+    weights_dir = os.environ.get("SNAP") + "/gimp-plugins/openvino-gimp/weights"
+    install_utils.complete_install(repo_weights_dir=weights_dir)
     device_name = config.get_property("device_name")  # this is sketchy
     model_name = config.get_property("model_name")
 
diff --git a/gimpopenvino/plugins/stable_diffusion_ov/stable_diffusion_ov.py b/gimpopenvino/plugins/stable_diffusion_ov/stable_diffusion_ov.py
index 967a0b5..36df6fd 100644
--- a/gimpopenvino/plugins/stable_diffusion_ov/stable_diffusion_ov.py
+++ b/gimpopenvino/plugins/stable_diffusion_ov/stable_diffusion_ov.py
@@ -32,6 +32,33 @@ sys.path.extend([os.path.join(os.path.dirname(os.path.realpath(__file__)), "..",
 from plugin_utils import *
 from model_management_window import ModelManagementWindow
 from tools.tools_utils import base_model_dir, config_path_dir, SDOptionCache
+sys.path.extend([
+    os.path.join(
+        os.path.dirname(os.path.realpath(__file__)),
+        "..",
+        "openvino-gimp",
+        "lib",
+        "python3.12",
+        "site-packages"
+    ),
+    os.path.join(
+        os.path.dirname(os.path.realpath(__file__)),
+        "..",
+        "openvino-gimp",
+        "usr",
+        "lib",
+        "python3",
+        "dist-packages"
+    )
+])
+ld_library_path_env_var = os.environ.get("LD_LIBRARY_PATH")
+snap_env_var = os.environ.get("SNAP")
+ov_content_dir = f"{snap_env_var}/gimp-plugins/openvino-gimp"
+os.environ["LD_LIBRARY_PATH"] = (
+    f"{ov_content_dir}/usr/lib/x86_64-linux-gnu:"
+    f"{ld_library_path_env_var}"
+)
+from gimpopenvino import install_utils
 
 _ = gettext.gettext
 image_paths = {
@@ -301,6 +328,8 @@ def on_toggled(widget, dialog):
 # This is what brings up the UI
 #
 def run(procedure, run_mode, image, layer, config, data):
+    weights_dir = os.environ.get("SNAP") + "/gimp-plugins/openvino-gimp/weights"
+    install_utils.complete_install(repo_weights_dir=weights_dir)
     if run_mode == Gimp.RunMode.INTERACTIVE:
         # Get all paths
         with open(os.path.join(config_path_dir, "gimp_openvino_config.json"), "r") as file:
diff --git a/gimpopenvino/plugins/superresolution_ov/superresolution_ov.py b/gimpopenvino/plugins/superresolution_ov/superresolution_ov.py
index be4ca03..a98302f 100644
--- a/gimpopenvino/plugins/superresolution_ov/superresolution_ov.py
+++ b/gimpopenvino/plugins/superresolution_ov/superresolution_ov.py
@@ -25,6 +25,33 @@ from gi.repository import Gimp, GimpUi, GObject, GLib, Gio, Gtk
 _ = gettext.gettext
 
 from tools.tools_utils import base_model_dir, config_path_dir
+sys.path.extend([
+    os.path.join(
+        os.path.dirname(os.path.realpath(__file__)),
+        "..",
+        "openvino-gimp",
+        "lib",
+        "python3.12",
+        "site-packages"
+    ),
+    os.path.join(
+        os.path.dirname(os.path.realpath(__file__)),
+        "..",
+        "openvino-gimp",
+        "usr",
+        "lib",
+        "python3",
+        "dist-packages"
+    )
+])
+ld_library_path_env_var = os.environ.get("LD_LIBRARY_PATH")
+snap_env_var = os.environ.get("SNAP")
+ov_content_dir = f"{snap_env_var}/gimp-plugins/openvino-gimp"
+os.environ["LD_LIBRARY_PATH"] = (
+    f"{ov_content_dir}/usr/lib/x86_64-linux-gnu:"
+    f"{ld_library_path_env_var}"
+)
+from gimpopenvino import install_utils
 
 image_paths = {
     "logo": os.path.join(
@@ -211,6 +238,8 @@ def remove_temporary_files(directory):
 
 # this is what brings up the UI
 def run(procedure, run_mode, image, layer, config, data):
+    weights_dir = os.environ.get("SNAP") + "/gimp-plugins/openvino-gimp/weights"
+    install_utils.complete_install(repo_weights_dir=weights_dir)
     scale = config.get_property("scale") 
     device_name = config.get_property("device_name") 
     model_name = config.get_property("model_name") 
